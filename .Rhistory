library(KernSmooth)
install.packages("KernSmooth")
install.packages("KernSmooth")
x<- list(1,2,3,4)
str(x)
x<- list(c(1,2),3,4)
str(x)
x<-c(1,2,3,4)
x
x[2]
[x]
x<- list(a=1,b=2,3,4)
str(x)
x<- list(list(1,2),3,4)
str(x)
x<-matrix(1:6,2,3)
x[1, , drop=FALSE]
x<- c("a","b","c","d")
seq_along(x)
install.packages("swirl")
packageVersion("swirl")
clear
library(swirl)
install_from_swirl("R Programming")
swirl()
5+7
skip()
x
y<-x-3
y
z<- c(1.1,9,3.14)
?c
z
C(z,555,z)
c(z,555,z)
skip()
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
skip()
skip()
skip()
skip()
getwd()
ls()
x<- 9
ls()
list.files()
?list.files
args(list.files)
skip()
dir.create(testdir)
testdir<-dir.create()
dir.create(old.dir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.name(from="mytest.R",to="mytest2.R")
file.rename(from="mytest.R",to="mytest2.R")
file.copy(from="mytest2.R", to="mytest3.R")
file.path("mytest3.R")
skip()
?file.create
info()
?dir.create
skip()
getwd()
setwd(old.dir)
skip()
skip()
skip()
?':'
seq(1,20)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq<-seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0, 1, 2),times=10)
rep(c(0, 1, 2), each = 10)
c(0.5,55,-10,6)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect(num_vect<1)
tf<-num_vect[num_vect<1]
info()
skip()
play()
tf<-num_vect[num_vect<1]
tf <- num_vect < 1
nxt()
TRUE FALSE TRUE FALSE
skip()
num_vect >= 6
c("My","name","is")
my_char<-c("My","name","is")
my_char
paste(my_char, collapse = " ")
info()
bye()
swirl()
library(swirl)
swirl()
my_name<-c(my_char,"little husky")
my_name
paste(my_name.collapse=" ")
paste(my_name, collapse=" ")
paste("Hello", "world!", sep = " ")
paste(seq(1:3),c("X","Y","Z"),sep="")
paste(1:3, c("X", "Y", "Z"), sep = "")
Try paste(LETTERS, 1:4, sep = "-")
paste(LETTERS, 1:4, sep = "-")
x<-c(44, NA, 5, NA)
3*x
y <- rnorm(1000)
z<-rep(NA,1000)
my_data <- sample(c(y, z), 100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
skip()
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
skip()
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2<- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector<- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
atributes(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(my_matrix,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients<- c("Bill","Gina","Kelly","Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames<-c("patient","age", "weight", "bp", "rating", "test")
colnames(my_data)<-cnames
my_data
7==7.0
x<-"a"
unclass(x)
swirl()
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind, airquality)
xyplot(Ozone~Wind, airquality,col="red",pch=8,main="Big Apple Data")
xyplot(Ozone~Wind, data=airquality,col="red",pch=8,main="Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month),data = airquality, layout=c(5,1))
xyplot(Ozone~Wind | Month,data = airquality, layout=c(5,1))
p<-xyplot(Ozone~Wind,data=airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f,layout=c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"),local=TRUE)
myedit(("plot2.R"))
myedit("plot2.R")
source(pathtofile("plot2.R"),local=TRUE)
str(diamonds)
table
table(diamonds$color)
table(diamonds$color,diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local = TRUE)
xyplot(price~carat|color*cut, data=diamonds,strip = FALSE,pch=20,xlab=myxlab,ylab = myylab,main=mymain)
xyplot(price~carat|color*cut, data=diamonds,pch=20,xlab=myxlab,ylab = myylab,main=mymain)
library(swirl)
swirl()
sample(colors())
sample(colors(),10)
pal<-colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1<-colorRampPalette(c("red","blue"))
p1(2)
pa(6)
p1(6)
0xcc
p1<-colorRampPalette(c("red","yellow"))
p2<-colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3<-colorRampPalette(c("blue","green"),alpha=.5)
p3(5)
plot(x,y, pch=19,col=rgb(0,0.5,0.5))
plot(x,y, pch=19,col=rgb(0,0.5,0.5,alpha = 0.3))
cols<-brewer.pal(3,"BuGn")
cols
showMe(cols)
pal<-colorRampPalette(cols)
showMe(pal(20))
image(volcano,col=pal(20))
image(volcano,col=p1(20))
swirl()
str(mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,col=drv)
qplot(displ,hwy,data=mpg,color=drv)
qplot(displ,hwy,data=mpg,color=drv,geom=c("point","smooth"))
qplot(y=hwy,data=mpg,color=drv)
myhigh
qplot(drv,hwy,data=mpg,geom = "boxplot")
qplot(drv,hwy,data=mpg,geom = "boxplot",color=manufacture)
qplot(drv,hwy,data=mpg,geom = "boxplot",color=manufacturer)
qplot(hwy,data=mpg,fill=drv)
qplot(displ,hwy,data=mpg,facet=.~drv)
qplot(displ,hwy,data=mpg,facets =.~drv)
qplot(hwy,data=mpg,facets =drv.~, binwidth=2)
qplot(hwy,data=mpg,facets =drv~., binwidth=2)
qplot(displ,hwy,data=mpg,geom=c("points","smooth"),facets = ~.drv)
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets = ~.drv)
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets = .~drv)
g<-ggplot(mpg,aes(displ,hwy))
summary(g)
g+geom_point()
print(g)
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(color=aes(drv),size=2,alpha=1/2),geom_smooth(size=4,linetype=3,method = "lm",se=FALSE)
g+geom_point(color=aes(drv),size=2,alpha=1/2)+geom_smooth(size=4,linetype=3,method = "lm",se=FALSE)
skip()
g+geom_point(color=aes(drv))+theme_bw(base_family = "Times")
skip()
plot(myx,myy,type="l",ylim = c(-3,3))
g<-ggplot(testdat,aes(x=myx,y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim = c(-3,3))
g<-ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)
g+geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method = "lm",se=FALSE,size=2,color="black")
skip()
str(diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30)
brk
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,geom = "density")
qplot(price,data=diamonds,geom = "density",color=cut)
qplot(carat,price,data = diamonds)
qplot(carat,price,data = diamonds,shape=cut)
qplot(carat,price,data = diamonds,color=cut)
qplot(carat,price,data = diamonds,color=cut,method="lm")
qplot(carat,price,data = diamonds,color=cut)+geom_smooth(method="lm")
qplot(carat,price,data = diamonds,color=cut,facets = .~cut)+geom_smooth(method="lm")
g<- qqplot(data=diamonds,aes(depth,price))
g<- qqplot(data=diamonds,aes(x=depth,y=price))
skip
skip()
summary(g)
g+geom_point(alpha=1/3)
cutpoints<-quantile(diamonds$carat,seq(0,1,4),na.rm = TRUE)
cutpoints<-quantile(diamonds$carat,seq(0,1,length=4),na.rm = TRUE)
cutpoints
diamonds$car2<-cut(diamonds$carat,cutpoints)
g<-ggplot(data=diamonds,aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method = "lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
library(swirl)
swirl()
dist(dataFrame)
hc<- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.6,col="blue")
abline(h=1.5,col="blue")
abline(h=0.4,col="red")
5
12
abline(h=0.05,col="greem")
abline(h=0.05,col="green")
dist(dFsm)
hc
View(dataMatrix)
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
skip()
mdist
mdist(x,y,cx,cy)
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R",local = TRUE)
heatmap(dataMatrix)
bye()
library(swirl)
swirl()
0
info()
bye()
swirl()
skip()
skip()
skip()
skip()
skip()
mat
svd(mat)
matu*diag*matv
matu*diag*t(matv)
skip()
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
dim(ssd)
names(ssd[,c(562,563)])
table(ssd$subject)
sum(table(ssd$subject)))
sum(ssd$subject))
sum(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1<-subset(ssd,subject==1)
dim(sub1)
names(sub1[,c(1:12)])
myedit("showXY.R")
skip()
mdist<-dist(x[,1:3])
skip()
hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
skip()
skip()
skip()
svd1<-svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
setwd("C:/Users/husky/Desktop/coursera/course 5/hw2")
install.packages("knitr")
install.packages("knitr")
library("knitr")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
install.packages("rmarkdown")
library("rmarkdown")
render("PA1_template.Rmd")
